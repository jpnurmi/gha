name: Dumpbin

on:
  push:
    paths: '**/dumpbin.yml'
  workflow_dispatch:

defaults:
  run:
    shell: pwsh

jobs:
  build-tools:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, windows-11-arm]

    steps:
      - run: |
          dir env:

      - uses: actions/cache@v4
        id: cache-visualstudio2022buildtools
        with:
          path: "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/Tools/MSVC"
          key: visualstudio2022buildtools-${{ runner.os }}-${{ runner.arch }}

      - run: choco install visualstudio2022buildtools --package-parameters "--add Microsoft.VisualStudio.Component.VC.Tools.x86.x64"
        if: runner.arch == 'X64' && steps.cache-visualstudio2022buildtools.outputs.cache-hit != 'true'

      - run: |
          $vsPath = "C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC"
          tree "$vsPath" /F
          $latestVersion = (Get-ChildItem -Path $vsPath | Sort-Object Name -Descending | Select-Object -First 1).Name
          $dumpbinPath = "$vsPath\$latestVersion\bin\Hostx64\x64"
          echo $dumpbinPath >> $env:GITHUB_PATH
        if: runner.arch == 'X64'

      - run: choco install visualstudio2022buildtools --package-parameters "--add Microsoft.VisualStudio.Component.VC.Tools.ARM64"
        if: runner.arch == 'ARM64' && steps.cache-visualstudio2022buildtools.outputs.cache-hit != 'true'

      - run: |
          $vsPath = "C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC"
          tree "$vsPath" /F
          $latestVersion = (Get-ChildItem -Path $vsPath | Sort-Object Name -Descending | Select-Object -First 1).Name
          $dumpbinPath = "$vsPath\$latestVersion\bin\Hostarm64\arm64"
          echo $dumpbinPath >> $env:GITHUB_PATH
        if: runner.arch == 'ARM64'

      - run: |
          Get-Command dumpbin

      - run: |
          dumpbin /headers (Get-Command dumpbin).Source
