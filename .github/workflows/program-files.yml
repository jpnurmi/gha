name: Program Files

on:
  push:
    paths:
      - "**/program-files.yml"
  workflow_dispatch:

env:
  GDK_VERSION: "250401"
  GDK_WINGET_VERSION: "2504.1.4046"

jobs:
  test-gdk-caching:
    runs-on: windows-2025
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Restore GDK
      id: cache-gdk
      uses: actions/cache/restore@v4
      with:
        path: |
          "C:/Program Files (x86)/Microsoft GDK/${{ env.GDK_VERSION }}"
          "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/MSBuild/Microsoft/VC/v170/Platforms/Gaming.Desktop.x64/${{ env.GDK_VERSION }}"
        key: gdk-${{ env.GDK_VERSION }}
        
    - name: Setup GDK
      if: ${{ steps.cache-gdk.outputs.cache-hit != 'true' }}
      run: |
        winget install --accept-source-agreements --accept-package-agreements --silent --disable-interactivity --version $env:GDK_WINGET_VERSION Microsoft.Gaming.GDK
        
    - name: Verify GDK installation paths exist
      run: |
        $gdkPath = "C:\Program Files (x86)\Microsoft GDK\$env:GDK_VERSION"
        $vsPath = "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Microsoft\VC\v170\Platforms\Gaming.Desktop.x64\$env:GDK_VERSION"
        
        if (-not (Test-Path $gdkPath)) {
          Write-Host "FAIL: GDK path does not exist: $gdkPath"
          Write-Host "Available GDK versions:"
          if (Test-Path "C:\Program Files (x86)\Microsoft GDK") {
            Get-ChildItem "C:\Program Files (x86)\Microsoft GDK" | ForEach-Object { Write-Host "  $($_.Name)" }
          }
          exit 1
        }
        
        if (-not (Test-Path $vsPath)) {
          Write-Host "FAIL: VS path does not exist: $vsPath"
          Write-Host "Available versions in VS Gaming.Desktop.x64:"
          $vsParent = "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Microsoft\VC\v170\Platforms\Gaming.Desktop.x64"
          if (Test-Path $vsParent) {
            Get-ChildItem $vsParent | ForEach-Object { Write-Host "  $($_.Name)" }
          } else {
            Write-Host "VS parent directory does not exist: $vsParent"
          }
          exit 1
        }
        
        Write-Host "SUCCESS: Both GDK paths exist"
        
    - name: Cache GDK (save)
      uses: actions/cache/save@v4
      with:
        path: |
          "C:/Program Files (x86)/Microsoft GDK/${{ env.GDK_VERSION }}"
          "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/MSBuild/Microsoft/VC/v170/Platforms/Gaming.Desktop.x64/${{ env.GDK_VERSION }}"
        key: gdk-${{ env.GDK_VERSION }}
        
    - name: Verify cache save succeeded
      run: |
        Write-Host "SUCCESS: Cache save completed without errors"
        Write-Host "GDK caching works as expected"